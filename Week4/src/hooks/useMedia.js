import {useState, useEffect} from 'react';
import {fetchData} from '../utils/fetchData';

const useMedia = () => {
  const [mediaArray, setMediaArray] = useState([]);

  const getMedia = async () => {
    try {
      const mediaData = await fetchData(
        import.meta.env.VITE_MEDIA_API + '/media'
      );

      // const userIds = mediaData.map(({user_id}) => user_id);

      const authApiUrl = import.meta.env.VITE_AUTH_API;
      const newData = await Promise.all(
        mediaData.map(async (item) => {
          const data = await fetchData(`${authApiUrl}/users/${item.user_id}`);
          return {...item, username: data.username};
        })
      );
      console.log('usersdata', newData);

      setMediaArray(newData);
    } catch (error) {
      console.error('Error', error);
    }
  };

  // ApiHooks.js
  const postMedia = async (file, inputs, token) => {
    // TODO: create a suitable object for Media API: without media_id, user_id, thumbnail and created_at. All those are generated by the API. See the media API documentation.
    // TODO: post the data to Media API and get the data as MediaResponse
    // TODO: return the data
    console.log('postMedia file', file);
    const data = {
      ...inputs,
      ...file,
    };
    const fetchOptions = {
      method: 'POST',
      headers: {
        'content-type': 'application/json',
        Authorization: 'Bearer: ' + token,
      },
      body: JSON.stringify(data),
    };

    const mediaResult = await fetchData(
      `${import.meta.env.VITE_MEDIA_API}/media`,
      fetchOptions
    );
  };

  useEffect(() => {
    getMedia();
  }, []);

  return {mediaArray, postMedia};
};

export default useMedia;
